cmake_minimum_required(VERSION 3.1)

project(cimgui)

if (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/imgui/imgui_tables.cpp)
	set(TABLES_SOURCE "imgui/imgui_tables.cpp")
else()
	set(TABLES_SOURCE "")
endif()


#general settings
file(GLOB IMGUI_SOURCES
    cimgui.cpp
    imgui/imgui.cpp
    imgui/imgui_draw.cpp
    imgui/imgui_demo.cpp
    imgui/imgui_widgets.cpp
	${TABLES_SOURCE}
)

set(IMGUI_STATIC "no" CACHE STRING "Build as a static library")
set(IMGUI_FREETYPE "no" CACHE STRING "Build with freetype library")
set(IMGUI_LIBRARIES )

if(IMGUI_FREETYPE)
	FIND_PACKAGE(freetype REQUIRED PATHS ${FREETYPE_PATH})
	list(APPEND IMGUI_LIBRARIES freetype)
	list(APPEND IMGUI_SOURCES imgui/misc/freetype/imgui_freetype.cpp)
	add_definitions("-DCIMGUI_FREETYPE=1")
endif(IMGUI_FREETYPE)

# Implementations
option(IMPL_WIN32 "add Win32 implementation" OFF)
option(IMPL_DX9 "add DX9 implementation" OFF)
option(IMPL_DX11 "add DX11 implementation" OFF)
option(IMPL_GLFW "add GLFW implementation" OFF)
option(IMPL_OGL3 "add OpenGL3 implementation" OFF)
option(IMPL_OGL2 "add OpenGL2 implementation" OFF)
option(IMPL_SDL "add SDL implementation" OFF)

if(IMPL_WIN32)
    list(APPEND IMGUI_SOURCES ./imgui/backends/imgui_impl_win32.cpp)
endif(IMPL_WIN32)

if(IMPL_DX9)
    list(APPEND IMGUI_SOURCES ./imgui/backends/imgui_impl_dx9.cpp)
endif(IMPL_DX9)

if(IMPL_DX11)
    list(APPEND IMGUI_SOURCES ./imgui/backends/imgui_impl_dx11.cpp)
endif(IMPL_DX11)

if(IMPL_GLFW)
    list(APPEND IMGUI_SOURCES ./imgui/backends/imgui_impl_glfw.cpp)
endif(IMPL_GLFW)

if(IMPL_OGL3)
    list(APPEND IMGUI_SOURCES ./imgui/backends/imgui_impl_opengl3.cpp)
endif(IMPL_OGL3)

if(IMPL_OGL2)
    list(APPEND IMGUI_SOURCES ./imgui/backends/imgui_impl_opengl2.cpp)
endif(IMPL_OGL2)

if(IMPL_SDL)
    list(APPEND IMGUI_SOURCES ./imgui/backends/imgui_impl_sdl.cpp)
endif(IMPL_SDL)

#add library and link
if (IMGUI_STATIC)
    add_library(cimgui STATIC ${IMGUI_SOURCES})
else (IMGUI_STATIC)
    add_library(cimgui SHARED ${IMGUI_SOURCES})
endif (IMGUI_STATIC)

target_compile_definitions(cimgui PUBLIC IMGUI_DISABLE_OBSOLETE_FUNCTIONS=1)
if (WIN32)
    target_compile_definitions(cimgui PUBLIC IMGUI_IMPL_API=extern\t\"C\"\t__declspec\(dllexport\))
    list(APPEND IMGUI_LIBRARIES imm32)
else (WIN32)
    target_compile_definitions(cimgui PUBLIC IMGUI_IMPL_API=extern\t\"C\"\t)
endif (WIN32)

target_include_directories(cimgui PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
target_include_directories(cimgui PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/imgui)
set_target_properties(cimgui PROPERTIES PREFIX "")
target_link_libraries(cimgui ${IMGUI_LIBRARIES})

#install
install(TARGETS cimgui
    RUNTIME DESTINATION  .
    LIBRARY DESTINATION  .
    ARCHIVE DESTINATION  .
)

#test
set(CIMGUI_TEST "no" CACHE STRING "Enable compilation of a test unit based on imgui null")

if (CIMGUI_TEST)
  add_subdirectory(test)
endif ()

